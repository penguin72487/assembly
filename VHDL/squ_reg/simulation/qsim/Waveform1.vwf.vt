// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/26/2024 11:15:58"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          cplmReg
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module cplmReg_vlg_vec_tst();
// constants                                           
// general purpose registers
reg S0;
reg S1;
reg clk;
reg [3:0] parallel_data;
reg rst_n;
// wires                                               
wire [3:0] reg_out;

// assign statements (if any)                          
cplmReg i1 (
// port map - connection between master ports and signals/registers   
	.S0(S0),
	.S1(S1),
	.clk(clk),
	.parallel_data(parallel_data),
	.reg_out(reg_out),
	.rst_n(rst_n)
);
initial 
begin 
#1000000 $finish;
end 

// S0
initial
begin
	S0 = 1'b1;
	S0 = #20000 1'b0;
	S0 = #15000 1'b1;
	S0 = #5000 1'b0;
	S0 = #5000 1'b1;
	S0 = #5000 1'b0;
	S0 = #5000 1'b1;
	S0 = #10000 1'b0;
	S0 = #15000 1'b1;
	S0 = #20000 1'b0;
	S0 = #15000 1'b1;
	S0 = #10000 1'b0;
	S0 = #15000 1'b1;
	S0 = #5000 1'b0;
	S0 = #10000 1'b1;
	S0 = #5000 1'b0;
	S0 = #15000 1'b1;
	S0 = #15000 1'b0;
	S0 = #5000 1'b1;
	S0 = #25000 1'b0;
	S0 = #5000 1'b1;
	S0 = #5000 1'b0;
	S0 = #10000 1'b1;
	S0 = #20000 1'b0;
	S0 = #10000 1'b1;
	S0 = #20000 1'b0;
	S0 = #5000 1'b1;
	S0 = #15000 1'b0;
	S0 = #10000 1'b1;
	S0 = #5000 1'b0;
	S0 = #15000 1'b1;
	S0 = #15000 1'b0;
	S0 = #20000 1'b1;
	S0 = #15000 1'b0;
	S0 = #15000 1'b1;
	S0 = #5000 1'b0;
	S0 = #10000 1'b1;
	S0 = #5000 1'b0;
	S0 = #15000 1'b1;
	S0 = #5000 1'b0;
	S0 = #5000 1'b1;
	S0 = #5000 1'b0;
	S0 = #5000 1'b1;
	S0 = #30000 1'b0;
	S0 = #5000 1'b1;
	S0 = #5000 1'b0;
	S0 = #5000 1'b1;
	S0 = #5000 1'b0;
	S0 = #5000 1'b1;
	S0 = #5000 1'b0;
	S0 = #10000 1'b1;
	S0 = #10000 1'b0;
	S0 = #15000 1'b1;
	S0 = #5000 1'b0;
	S0 = #15000 1'b1;
	S0 = #10000 1'b0;
	S0 = #5000 1'b1;
	S0 = #10000 1'b0;
	S0 = #15000 1'b1;
	S0 = #10000 1'b0;
	S0 = #5000 1'b1;
	S0 = #15000 1'b0;
	S0 = #15000 1'b1;
	S0 = #15000 1'b0;
	S0 = #10000 1'b1;
	S0 = #5000 1'b0;
	S0 = #10000 1'b1;
	S0 = #5000 1'b0;
	S0 = #10000 1'b1;
	S0 = #5000 1'b0;
	S0 = #10000 1'b1;
	S0 = #20000 1'b0;
	S0 = #5000 1'b1;
	S0 = #10000 1'b0;
	S0 = #10000 1'b1;
	S0 = #10000 1'b0;
	S0 = #15000 1'b1;
	S0 = #10000 1'b0;
	S0 = #15000 1'b1;
	S0 = #5000 1'b0;
	S0 = #15000 1'b1;
	S0 = #15000 1'b0;
	S0 = #10000 1'b1;
	S0 = #20000 1'b0;
	S0 = #5000 1'b1;
	S0 = #25000 1'b0;
	S0 = #10000 1'b1;
	S0 = #5000 1'b0;
	S0 = #5000 1'b1;
	S0 = #10000 1'b0;
	S0 = #5000 1'b1;
	S0 = #5000 1'b0;
	S0 = #10000 1'b1;
end 

// S1
initial
begin
	S1 = 1'b0;
	S1 = #15000 1'b1;
	S1 = #25000 1'b0;
	S1 = #5000 1'b1;
	S1 = #10000 1'b0;
	S1 = #10000 1'b1;
	S1 = #5000 1'b0;
	S1 = #20000 1'b1;
	S1 = #10000 1'b0;
	S1 = #10000 1'b1;
	S1 = #30000 1'b0;
	S1 = #5000 1'b1;
	S1 = #10000 1'b0;
	S1 = #5000 1'b1;
	S1 = #5000 1'b0;
	S1 = #5000 1'b1;
	S1 = #10000 1'b0;
	S1 = #5000 1'b1;
	S1 = #5000 1'b0;
	S1 = #10000 1'b1;
	S1 = #5000 1'b0;
	S1 = #10000 1'b1;
	S1 = #15000 1'b0;
	S1 = #30000 1'b1;
	S1 = #15000 1'b0;
	S1 = #15000 1'b1;
	S1 = #10000 1'b0;
	S1 = #5000 1'b1;
	S1 = #10000 1'b0;
	S1 = #10000 1'b1;
	S1 = #5000 1'b0;
	S1 = #5000 1'b1;
	S1 = #5000 1'b0;
	S1 = #5000 1'b1;
	S1 = #10000 1'b0;
	S1 = #55000 1'b1;
	S1 = #5000 1'b0;
	S1 = #5000 1'b1;
	S1 = #5000 1'b0;
	S1 = #10000 1'b1;
	S1 = #5000 1'b0;
	S1 = #10000 1'b1;
	S1 = #5000 1'b0;
	S1 = #5000 1'b1;
	S1 = #15000 1'b0;
	S1 = #10000 1'b1;
	S1 = #10000 1'b0;
	S1 = #10000 1'b1;
	S1 = #10000 1'b0;
	S1 = #15000 1'b1;
	S1 = #5000 1'b0;
	S1 = #20000 1'b1;
	S1 = #20000 1'b0;
	S1 = #30000 1'b1;
	S1 = #10000 1'b0;
	S1 = #10000 1'b1;
	S1 = #20000 1'b0;
	S1 = #15000 1'b1;
	S1 = #10000 1'b0;
	S1 = #5000 1'b1;
	S1 = #5000 1'b0;
	S1 = #20000 1'b1;
	S1 = #5000 1'b0;
	S1 = #15000 1'b1;
	S1 = #10000 1'b0;
	S1 = #5000 1'b1;
	S1 = #10000 1'b0;
	S1 = #30000 1'b1;
	S1 = #5000 1'b0;
	S1 = #5000 1'b1;
	S1 = #15000 1'b0;
	S1 = #5000 1'b1;
	S1 = #10000 1'b0;
	S1 = #5000 1'b1;
	S1 = #10000 1'b0;
	S1 = #15000 1'b1;
	S1 = #15000 1'b0;
	S1 = #10000 1'b1;
	S1 = #5000 1'b0;
	S1 = #5000 1'b1;
	S1 = #5000 1'b0;
	S1 = #20000 1'b1;
	S1 = #15000 1'b0;
	S1 = #5000 1'b1;
	S1 = #5000 1'b0;
	S1 = #25000 1'b1;
	S1 = #5000 1'b0;
	S1 = #25000 1'b1;
	S1 = #5000 1'b0;
end 

// clk
initial
begin
	repeat(135)
	begin
		clk = 1'b0;
		clk = #3700 1'b1;
		# 3700;
	end
	clk = 1'b0;
end 
// parallel_data[ 3 ]
initial
begin
	parallel_data[3] = 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #15000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #15000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #15000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #20000 1'b1;
	parallel_data[3] = #30000 1'b0;
	parallel_data[3] = #25000 1'b1;
	parallel_data[3] = #20000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #15000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #15000 1'b1;
	parallel_data[3] = #15000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #15000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #15000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #25000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #35000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #25000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #30000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #30000 1'b1;
	parallel_data[3] = #15000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #15000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #20000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #15000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #15000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #15000 1'b1;
	parallel_data[3] = #10000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #15000 1'b0;
	parallel_data[3] = #10000 1'b1;
	parallel_data[3] = #5000 1'b0;
	parallel_data[3] = #5000 1'b1;
	parallel_data[3] = #5000 1'b0;
end 
// parallel_data[ 2 ]
initial
begin
	parallel_data[2] = 1'b0;
	parallel_data[2] = #15000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #10000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #25000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #25000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #15000 1'b0;
	parallel_data[2] = #10000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #15000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #10000 1'b1;
	parallel_data[2] = #15000 1'b0;
	parallel_data[2] = #15000 1'b1;
	parallel_data[2] = #20000 1'b0;
	parallel_data[2] = #20000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #15000 1'b1;
	parallel_data[2] = #15000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #15000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #15000 1'b0;
	parallel_data[2] = #10000 1'b1;
	parallel_data[2] = #15000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #25000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #15000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #10000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #30000 1'b1;
	parallel_data[2] = #20000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #25000 1'b0;
	parallel_data[2] = #10000 1'b1;
	parallel_data[2] = #15000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #10000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #10000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #15000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #25000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #10000 1'b1;
	parallel_data[2] = #30000 1'b0;
	parallel_data[2] = #10000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #15000 1'b1;
	parallel_data[2] = #10000 1'b0;
	parallel_data[2] = #5000 1'b1;
	parallel_data[2] = #35000 1'b0;
	parallel_data[2] = #15000 1'b1;
	parallel_data[2] = #5000 1'b0;
	parallel_data[2] = #20000 1'b1;
	parallel_data[2] = #25000 1'b0;
	parallel_data[2] = #10000 1'b1;
end 
// parallel_data[ 1 ]
initial
begin
	parallel_data[1] = 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #15000 1'b0;
	parallel_data[1] = #15000 1'b1;
	parallel_data[1] = #30000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #10000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #15000 1'b0;
	parallel_data[1] = #15000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #25000 1'b1;
	parallel_data[1] = #10000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #10000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #10000 1'b0;
	parallel_data[1] = #35000 1'b1;
	parallel_data[1] = #10000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #20000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #20000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #20000 1'b0;
	parallel_data[1] = #25000 1'b1;
	parallel_data[1] = #10000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #10000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #20000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #25000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #10000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #15000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #25000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #15000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #20000 1'b0;
	parallel_data[1] = #15000 1'b1;
	parallel_data[1] = #20000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #15000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #15000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #10000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #15000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #10000 1'b1;
	parallel_data[1] = #5000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #10000 1'b0;
	parallel_data[1] = #5000 1'b1;
	parallel_data[1] = #20000 1'b0;
end 
// parallel_data[ 0 ]
initial
begin
	parallel_data[0] = 1'b1;
	parallel_data[0] = #20000 1'b0;
	parallel_data[0] = #15000 1'b1;
	parallel_data[0] = #10000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #25000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #20000 1'b0;
	parallel_data[0] = #10000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #10000 1'b0;
	parallel_data[0] = #10000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #15000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #10000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #30000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #30000 1'b1;
	parallel_data[0] = #15000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #10000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #10000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #15000 1'b0;
	parallel_data[0] = #25000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #10000 1'b1;
	parallel_data[0] = #20000 1'b0;
	parallel_data[0] = #10000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #30000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #10000 1'b0;
	parallel_data[0] = #45000 1'b1;
	parallel_data[0] = #10000 1'b0;
	parallel_data[0] = #10000 1'b1;
	parallel_data[0] = #10000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #20000 1'b1;
	parallel_data[0] = #15000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #25000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #15000 1'b0;
	parallel_data[0] = #10000 1'b1;
	parallel_data[0] = #20000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #15000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #25000 1'b1;
	parallel_data[0] = #10000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #10000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #15000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #10000 1'b1;
	parallel_data[0] = #15000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #15000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
	parallel_data[0] = #15000 1'b0;
	parallel_data[0] = #15000 1'b1;
	parallel_data[0] = #5000 1'b0;
	parallel_data[0] = #5000 1'b1;
end 

// rst_n
initial
begin
	rst_n = 1'b1;
end 
endmodule

